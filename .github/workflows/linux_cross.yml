name: Build (Linux Cross)

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      max-parallel: 1

    steps:
    - name: Update sources.list for cross compilation tools
      continue-on-error: true
      run: |
        # Ref.: How to use apt-get to download multi-arch library?
        # https://askubuntu.com/a/1323570
        sudo dpkg --add-architecture arm64
        sudo touch /etc/apt/sources.list.d/arm-cross-compile-sources.list
        sudo bash -c 'echo "deb [arch=arm64] http://ports.ubuntu.com/ focal main restricted" >> /etc/apt/sources.list.d/arm-cross-compile-sources.list'
        sudo bash -c 'echo "deb [arch=arm64] http://ports.ubuntu.com/ focal-updates main restricted" >> /etc/apt/sources.list.d/arm-cross-compile-sources.list'
        sudo bash -c 'echo "deb [arch=arm64] http://ports.ubuntu.com/ focal universe" >> /etc/apt/sources.list.d/arm-cross-compile-sources.list'
        sudo bash -c 'echo "deb [arch=arm64] http://ports.ubuntu.com/ focal-updates universe" >> /etc/apt/sources.list.d/arm-cross-compile-sources.list'
        sudo bash -c 'echo "deb [arch=arm64] http://ports.ubuntu.com/ focal multiverse" >> /etc/apt/sources.list.d/arm-cross-compile-sources.list'
        sudo bash -c 'echo "deb [arch=arm64] http://ports.ubuntu.com/ focal-updates multiverse" >> /etc/apt/sources.list.d/arm-cross-compile-sources.list'
        sudo bash -c 'echo "deb [arch=arm64] http://ports.ubuntu.com/ focal-backports main restricted universe multiverse" >> /etc/apt/sources.list.d/arm-cross-compile-sources.list'
        sudo apt update

    - name: Setup OpenGL and cross compilation tools
      run: |
        sudo apt -y install libc6-dev-arm64-cross libstdc++-10-dev-arm64-cross g++-aarch64-linux-gnu
        # sudo apt -y install gcc-multilib g++-multilib libc6-dev-arm64-cross libstdc++-10-dev-arm64-cross g++-aarch64-linux-gnu
        # sudo apt -y install libopengl-dev:arm64 libxrandr-dev:arm64 mesa-common-dev:arm64 libxinerama-dev:arm64 libxcursor-dev:arm64 libxi-dev:arm64

    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: 'update'
        fetch-depth: 1
        submodules: recursive

    - name: Install luajit
      continue-on-error: true
      run: |
        sudo apt install luajit
        luajit -v

    - name: Generate cimgui code
      run: |
        cd imgui_dll/cimgui/generator
        luajit generator.lua gcc "" glfw opengl3 opengl2 sdl
        cd ../../..

    - name: Build imgui so
      run: |
        cd imgui_dll
        bash ./build_imgui_linux_cross.sh
        cd ..

    - name: Build imnodes so
      run: |
        cd imnodes_dll
        bash ./build_imnodes_linux_cross.sh
        cd ..

    - name: Commit new libraries
      continue-on-error: true
      run: |
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}"
        git add lib/*
        git commit -a -m "commit by ${GITHUB_ACTOR} via GitHub Actions"
        git push --force-with-lease -u origin update
