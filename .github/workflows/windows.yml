name: Build (Windows)

on:
  workflow_call:
    inputs:
      imgui_commit:
        description: 'SHA-1 hash to checkout'
        default: ''
        required: false
        type: string
      fetch_depth:
        description: 'Number of commits to fetch. 0 indicates all history for all branches and tags.'
        default: '1'
        required: false
        type: string
  workflow_dispatch:
    inputs:
      imgui_commit:
        description: 'SHA-1 hash to checkout'
        default: ''
        required: false
      fetch_depth:
        description: 'Number of commits to fetch. 0 indicates all history for all branches and tags.'
        default: '1'
        required: false

jobs:
  build:
    permissions:
      contents: write
    runs-on: windows-latest
    strategy:
      fail-fast: false
      max-parallel: 1

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: 'update'
        fetch-depth: ${{ github.event.inputs.fetch_depth }}
        submodules: recursive

    - name: Checkout specific ImGui commit
      if: "${{ github.event.inputs.imgui_commit != ''}}"
      run: |
        cd imgui_dll/cimgui/imgui
        git checkout -f --detach ${{ github.event.inputs.imgui_commit }}
        cd ../../..

    - name: Install MSYS2 luajit
      continue-on-error: true
      shell: cmd
      run: |
        C:\msys64\usr\bin\pacman -S --noconfirm mingw-w64-x86_64-luajit
        C:\msys64\mingw64\bin\luajit.exe -v

    - name: Generate cimgui code
      shell: cmd
      run: |
        cd imgui_dll\cimgui\generator
        C:\msys64\mingw64\bin\luajit.exe generator.lua gcc ""
        git diff
        cd ..\..\..

    - name: Build imgui dll
      shell: cmd
      run: |
        cd imgui_dll
        build_imgui_windows.cmd cmake
        cd ..

    - name: Build imnodes dll
      shell: cmd
      run: |
        cd imnodes_dll
        build_imnodes_windows.cmd cmake
        cd ..

    - name: Commit new libraries
      continue-on-error: true
      run: |
        git config user.name "$env:GITHUB_ACTOR"
        git config user.email "$env:GITHUB_ACTOR"
        git add lib/*
        git commit -a -m "commit by $env:GITHUB_ACTOR via GitHub Actions"
        git push --force-with-lease -u origin update
